"""
Django settings for virtualcargeeks project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from . import storage_backends

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY'),

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

FILE_UPLOAD_MAX_MEMORY_SIZE = 20971520  # 20 MB
FILE_UPLOAD_MAX_DISK_SIZE = 31457280  # 30 MB

# Application definition

INSTALLED_APPS = [
    'django.core.cache',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'base.apps.BaseConfig',
    'channels',
    'ws4redis',
    'babel',
    'formtools',
    'bootstrap4',
    'crispy_forms',
    'phonenumber_field',
    'storages',
    'file_resubmit',
    'django.contrib.humanize',
]

ASGI_APPLICATION = 'virtualcargeeks.asgi.application'

AUTH_USER_MODEL = 'base.User' #This changes from the built-in Django User creation model to our custom model.

LOGIN_REDIRECT_URL = {
    'customer': '/myfinancing/',
    'dealer': '/pendingdeals/',
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'file_cache',
    },
    'file_resubmit': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/file_resubmit_cache',
    }
}

MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
#    "base.middleware.AutoLogoutMiddleware",
]

#AUTO_LOGOUT_TIME = 3600  # 1 hour

ROOT_URLCONF = "virtualcargeeks.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / 'templates'
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "virtualcargeeks.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': os.environ.get('POSTGRES_NAME'),
#        'USER': os.environ.get('POSTGRES_USER'),
#        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
#        'HOST': 'localhost',
#        'PORT': '5432',
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('AWS_DATABASE_NAME'),
        'USER': os.environ.get('AWS_DATABASE_USERNAME'),
        'PASSWORD': os.environ.get('AWS_DATABASE_PASSWORD'),
        'HOST': os.environ.get('AWS_DATABASE_ENDPOINT'),
        'PORT': '5432'
    }
}

SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

MEDIA_URL = 'media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
CRISPY_TEMPLATE_PACK = 'bootstrap4'

#SMTP Configuration

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtpout.secureserver.net'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'info@cargeeks.ca'
DEFAULT_FROM_EMAIL = 'Car Geeks <info@cargeeks.ca>'
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')


# AWS general settings
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_REGION = 'us-east-1'  # example: 'us-east-1'

# Public bucket settings
AWS_PUBLIC_BUCKET_NAME = os.environ.get('AWS_PUBLIC_BUCKET_NAME')
AWS_PUBLIC_CUSTOM_DOMAIN = f'{AWS_PUBLIC_BUCKET_NAME}.s3.amazonaws.com'
AWS_PUBLIC_S3_URL = f'https://{AWS_PUBLIC_CUSTOM_DOMAIN}/'

# Private bucket settings
AWS_PRIVATE_BUCKET_NAME = os.environ.get('AWS_PRIVATE_BUCKET_NAME')
AWS_PRIVATE_CUSTOM_DOMAIN = f'{AWS_PRIVATE_BUCKET_NAME}.s3.amazonaws.com'
AWS_PRIVATE_S3_URL = f'https://{AWS_PRIVATE_CUSTOM_DOMAIN}/'

# Default storage settings
DEFAULT_FILE_STORAGE = 'virtualcargeeks.storage_backends.PrivateS3Boto3Storage'
STATICFILES_STORAGE = 'virtualcargeeks.storage_backends.PublicS3Boto3Storage'

# Private media settings
PRIVATE_MEDIA_LOCATION = 'private'
PRIVATE_FILE_STORAGE = 'virtualcargeeks.storage_backends.PrivateS3Boto3Storage'

# Link expiration time in seconds
AWS_QUERYSTRING_EXPIRE = 3600