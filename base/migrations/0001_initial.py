# Generated by Django 4.1.7 on 2023-04-15 16:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=155, null=True)),
                ("last_name", models.CharField(blank=True, max_length=155, null=True)),
                (
                    "date_of_birth",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "address_line_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("province", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "postal_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "drivers_license",
                    models.FileField(
                        blank=True, null=True, upload_to="drivers_licenses"
                    ),
                ),
                (
                    "employment_status",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("job_title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "employment_length",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "salary",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "monthly_income",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "other_income",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                ("is_customer", models.BooleanField(default=False)),
                ("is_dealer", models.BooleanField(default=False)),
                ("is_broker", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "dealer_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Dealer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "dealer_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Dealership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("location", models.CharField(max_length=255)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "address_line_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("province", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "postal_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "social_insurance_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "drivers_license",
                    models.FileField(
                        blank=True, null=True, upload_to="drivers_licenses"
                    ),
                ),
                (
                    "employment_status",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("job_title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "employment_length",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "salary",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "monthly_income",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "other_income",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "paystub_file",
                    models.FileField(blank=True, null=True, upload_to="paystubs"),
                ),
                (
                    "tax_return",
                    models.FileField(blank=True, null=True, upload_to="tax_returns"),
                ),
                ("vinNumber", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "stockNumber",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehiclePrice",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "downPayment",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "vehicleMileage",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                ("make", models.CharField(blank=True, max_length=100, null=True)),
                ("model", models.CharField(blank=True, max_length=100, null=True)),
                ("trim", models.CharField(blank=True, max_length=100, null=True)),
                ("year", models.CharField(blank=True, max_length=100, null=True)),
                ("color", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True, default="pending", max_length=100, null=True
                    ),
                ),
                ("tradeInVin", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "tradeInPrice",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "tradeInMileage",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "tradeInMake",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tradeInModel",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tradeInTrim",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tradeInYear",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tradeInColor",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehicleFront",
                    models.FileField(blank=True, null=True, upload_to="vehicle_front"),
                ),
                (
                    "vehicleSide",
                    models.FileField(blank=True, null=True, upload_to="vehicle_side"),
                ),
                (
                    "vehicleBack",
                    models.FileField(blank=True, null=True, upload_to="vehicle_back"),
                ),
                (
                    "vehicleOdometer",
                    models.FileField(
                        blank=True, null=True, upload_to="vehicle_odometer"
                    ),
                ),
                (
                    "vehicleInterior",
                    models.FileField(
                        blank=True, null=True, upload_to="vehicle_interior"
                    ),
                ),
                (
                    "exampleDocument1",
                    models.FileField(
                        blank=True, null=True, upload_to="example_document1"
                    ),
                ),
                (
                    "exampleDocument2",
                    models.FileField(
                        blank=True, null=True, upload_to="example_document2"
                    ),
                ),
                ("updated", models.DateTimeField(auto_now=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "Dealership",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.dealership",
                    ),
                ),
                (
                    "dealer_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dealer_submitted_vehicle",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-updated", "-created"],
            },
        ),
        migrations.CreateModel(
            name="CustomerVehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("make", models.CharField(blank=True, max_length=100, null=True)),
                ("model", models.CharField(blank=True, max_length=100, null=True)),
                ("year", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "down_payment",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                ("vinNumber", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "stockNumber",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehiclePrice",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "vehicleMileage",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                ("trim", models.CharField(blank=True, max_length=100, null=True)),
                ("color", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True, default="pending", max_length=100, null=True
                    ),
                ),
                ("tradeInVin", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "tradeInPrice",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "tradeInMileage",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(10000000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "tradeInMake",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tradeInModel",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tradeInTrim",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tradeInYear",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tradeInColor",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehicleFront",
                    models.FileField(blank=True, null=True, upload_to="vehicle_front"),
                ),
                (
                    "vehicleSide",
                    models.FileField(blank=True, null=True, upload_to="vehicle_side"),
                ),
                (
                    "vehicleBack",
                    models.FileField(blank=True, null=True, upload_to="vehicle_back"),
                ),
                (
                    "vehicleOdometer",
                    models.FileField(
                        blank=True, null=True, upload_to="vehicle_odometer"
                    ),
                ),
                (
                    "vehicleInterior",
                    models.FileField(
                        blank=True, null=True, upload_to="vehicle_interior"
                    ),
                ),
                (
                    "exampleDocument1",
                    models.FileField(
                        blank=True, null=True, upload_to="example_document1"
                    ),
                ),
                (
                    "exampleDocument2",
                    models.FileField(
                        blank=True, null=True, upload_to="example_document2"
                    ),
                ),
                (
                    "dealer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dealer_customers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_vehicle",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Broker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("company", models.CharField(max_length=255)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="dealer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="customers",
                to="base.dealer",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
